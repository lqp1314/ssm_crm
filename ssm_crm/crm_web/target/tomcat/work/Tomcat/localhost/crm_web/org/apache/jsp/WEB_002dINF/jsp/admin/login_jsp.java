/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-03-31 15:11:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");

    String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort() +request.getContextPath()+"/";

      out.write("    \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>登录</title>\r\n");
      out.write("<!-- 导入easyui的资源文件 -->\r\n");
      out.write("     <!-- 如果不添加");
      out.print(basePath);
      out.write(" 则 访问不到静态路径 -->\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(basePath);
      out.write("js/easyui/themes/default/easyui.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(basePath);
      out.write("js/easyui/themes/icon.css\">\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(basePath);
      out.write("js/jquery-1.8.2.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(basePath);
      out.write("js/easyui/jquery.easyui.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(basePath);
      out.write("js/jsonHandler.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- 使用easyUI创建 简单的登录窗口   使用div的方式创建  标题 =登录-->\r\n");
      out.write("    <div  id=\"win\" >\r\n");
      out.write("      <!-- 将窗口放置到中心位置  离顶端30 像素-->\r\n");
      out.write("       <center style=\"padding-top: 30px\">\r\n");
      out.write("         <form id=\"form\" >\r\n");
      out.write("            <p>用户名:<input type=\"text\" name=\"username\"></p>\r\n");
      out.write("            <p>密&nbsp;码:<input type=\"text\" name=\"password\"></p>\r\n");
      out.write("            <div>\r\n");
      out.write("            <!-- class 设为 按钮形式 iconCls 设置图标 -->\r\n");
      out.write("    \t\t<a href=\"javascript:void(0)\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-ok'\" id=\"login\">登录</a>  \r\n");
      out.write("\t\t\t&nbsp;\r\n");
      out.write("\t\t    <a href=\"javascript:void(0)\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-cancel'\">取消</a>  \r\n");
      out.write("            </div>    \r\n");
      out.write("         </form>\r\n");
      out.write("       </center>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <!-- 编写 js脚本 -->\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("      //将这个div 设置为 窗口形式      \r\n");
      out.write("      $(function(){\r\n");
      out.write("\t\t\t$('#win').window({    \r\n");
      out.write("\t\t\t    width:300,    \r\n");
      out.write("\t\t\t    height:200,  \r\n");
      out.write("\t\t\t    /*定义是否将窗体显示为模式化窗口。*/\r\n");
      out.write("\t\t\t    modal:true,\r\n");
      out.write("\t\t\t    title:'登录',/* 设置窗口的标题 */\r\n");
      out.write("\t\t\t    iconCls:'icon-login'/* 设置窗口的图标 */,\r\n");
      out.write("\t\t\t    /*定义是否可以拖动窗口*/\r\n");
      out.write("\t\t\t    draggable:false,\r\n");
      out.write("\t\t\t    /*是否可以折叠窗口*/\r\n");
      out.write("\t\t\t    collapsible:false,\r\n");
      out.write("\t\t\t    /*是否能够改变窗口大小*/\r\n");
      out.write("\t\t\t    resizable:false,\r\n");
      out.write("\t\t\t    /*如果设置为true，在窗体显示的时候显示阴影。*/\r\n");
      out.write("\t\t\t    shadow:true\r\n");
      out.write("\t\t\t});\r\n");
      out.write("        \r\n");
      out.write("           //给窗口按钮添加单击事件 \r\n");
      out.write("           $(\"#login\").click(function(){\r\n");
      out.write("        \t  //将得到的数据 全局序列化\r\n");
      out.write("        \t //var param = $(\"#form\").serializeObject();\r\n");
      out.write("        \t  //使用ajax 进行页面回显  key:value\r\n");
      out.write("        \t  $.ajax({\r\n");
      out.write("        \t\turl :\"");
      out.print(basePath );
      out.write("/admin/isLogin\",\r\n");
      out.write("        \t\ttype:\"post\",\r\n");
      out.write("        \t\tdata:{\r\n");
      out.write("        \t     /* 这个是 获得input里面的数值的方法 $(\"input[name=username]\").val() 一定要记住*/\r\n");
      out.write("        \t     username:$(\"input[name=username]\").val(),\r\n");
      out.write("        \t     password:$(\"input[name=password]\").val(),\r\n");
      out.write("        \t\t},\r\n");
      out.write("        \t\tsuccess:function(data)\r\n");
      out.write("        \t\t{\r\n");
      out.write("        \t\t\t//返回Boolean类型\r\n");
      out.write("        \t\t\tif(data){  //登录成功 返回页面首页\r\n");
      out.write("        \t\t      window.location.href=\"");
      out.print(basePath );
      out.write("/admin/main\";\r\n");
      out.write("        \t\t\t}\r\n");
      out.write("        \t\t\telse{//登录失败的情况下\r\n");
      out.write("        \t\t\t\t//提示信息  调用easyUI的消息窗口 \r\n");
      out.write("        \t\t\t\t/*\r\n");
      out.write("        \t\t\t\ttitle：在头部面板显示的标题文本。\r\n");
      out.write("                        msg：显示的消息文本。\r\n");
      out.write("                        fn(b): 当用户点击“确定”按钮的时侯将传递一个true值给回调函数，否则传递一个false值。\r\n");
      out.write("        \t\t\t\t*/\r\n");
      out.write("        \t\t\t\t$.messager.confirm('确认','账号或密码不对!',function(r){\r\n");
      out.write("        \t\t\t\t\tif(r){ //点击了确认按钮  \r\n");
      out.write("        \t\t\t\t\t //  将先前输入的账号和密码设为空\r\n");
      out.write("                             $(\"input[name=username]\").val(\"\");\r\n");
      out.write("\t\t\t\t\t\t\t $(\"input[name=password]\").val(\"\");\r\n");
      out.write("        \t\t\t\t\t //将焦点再次放到username上\r\n");
      out.write("        \t\t\t\t\t $(\"input[name=username]\").focus();\r\n");
      out.write("        \t\t\t\t\t}\r\n");
      out.write("        \t\t\t\t});\r\n");
      out.write("        \t\t\t\t\r\n");
      out.write("        \t\t\t}\r\n");
      out.write("        \t\t\t\t\r\n");
      out.write("        \t\t}\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\t  \r\n");
      out.write("        \t\t  \r\n");
      out.write("        \t\t  \r\n");
      out.write("        \t  });\r\n");
      out.write("           });\r\n");
      out.write("      });\r\n");
      out.write("    \r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
